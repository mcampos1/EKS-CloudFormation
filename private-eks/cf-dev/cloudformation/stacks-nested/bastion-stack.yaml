---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EC2'

Parameters:
  VpcId:
    Description: ID of VPC to deploy into
    Type: String
  BastionInstanceType:
    Description: EC2 instance type of bastion host
    Type: String
  AMI:
    Description: Latest RHEL 7 spel-minimal image
    Type: String
  KeyName:
    Description: Key pair to use for EC2 instance creation
    Type: String
  Subnet:
    Description: Bastion subnet (public)
    Type: String
  BastionName:
    Description: Name of EC2 bastion host
    Type: String
  BastionSecurityGroupName:
    Description: Common name of bastion security group
    Type: String
  ClusterControlPlaneSecurityGroup:
    Description: The security group of the cluster control plane.
    Type: String

Resources:
  BastionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEKSClusterPolicy'
        - 'arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationFullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchFullAccess'

  BastionInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref BastionRole

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the bastion host
      VpcId: !Ref VpcId
      GroupName: !Ref BastionSecurityGroupName
      SecurityGroupIngress: 
      - CidrIp: 0.0.0.0/0  # Allowing access from any IP address
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
      Tags:
      - Key: Name
        Value: !Ref BastionSecurityGroupName
      - Key: Env
        Value: Dev

  Bastion:
    Type: AWS::EC2::Instance
    DependsOn: BastionSecurityGroup
    Properties:
      IamInstanceProfile: !Ref BastionInstanceProfile
      InstanceType: !Ref BastionInstanceType
      ImageId: !Ref AMI
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: !Ref Subnet
          GroupSet:
            - !Ref BastionSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 100
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: !Ref BastionName
        - Key: Env
          Value: Dev
      UserData:
        Fn::Base64: !Sub |
          #cloud-boothook
          #!/bin/bash

          yum update -y
          yum install nano firewalld unzip iptables-services -y #will have to manually curl and unzip awscli on non aws linux distros

          # sudo systemctl enable firewalld
          # sudo systemctl start firewalld
          # sudo firewall-cmd --permanent --add-port=22/tcp
          # sudo firewall-cmd --permanent --add-port=80/tcp
          # sudo firewall-cmd --permanent --add-port=443/tcp
          # sudo firewall-cmd --permanent --add-port=8850/tcp
          # sudo firewall-cmd --reload

          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.29.0/2024-01-04/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
          echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc

          source ~/.bash_profile
          if ! command -v aws &> /dev/null
          then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install --update
          fi

          aws eks update-kubeconfig --name nested-cluster-mark --region us-gov-west-1

  BastionSecurityGroupToClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: BastionSecurityGroup
    Properties:
      GroupId: !Ref ClusterControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref BastionSecurityGroup

Outputs:
  InstanceId:
    Description: The instance ID of the EC2 instance
    Value: !Ref Bastion
  AMI:
    Value: !Ref AMI
  IP:
    Value: !GetAtt Bastion.PublicIp
  BastionSecurityGroupId:
    Value: !Ref BastionSecurityGroup
